[gd_scene load_steps=8 format=3 uid="uid://bo4sxn5iabijl"]

[ext_resource type="AudioStream" uid="uid://ds60orcmyyfsw" path="res://assets/sfx/kick.ogg" id="2_yd2ad"]
[ext_resource type="Script" uid="uid://dqi2pls0xboqr" path="res://addons/rhythm_notifier/rhythm_notifier.gd" id="3_phn1r"]
[ext_resource type="AudioStream" uid="uid://bxamnrwj8w5xu" path="res://assets/music/test/metro.ogg" id="4_v8abe"]
[ext_resource type="Script" uid="uid://5vpj6ph24507" path="res://scripts/fx/fx.gd" id="5_c62yb"]
[ext_resource type="Script" uid="uid://dqrlchg6pdnje" path="res://scripts/fx/fx_beat.gd" id="6_5n4lr"]
[ext_resource type="AudioStream" uid="uid://cgaoc62unxnij" path="res://assets/sfx/kick_2.ogg" id="7_yda4p"]

[sub_resource type="GDScript" id="GDScript_p80jl"]
script/source = "extends Node
class_name MusicTest

@export var kick_player: AudioStreamPlayer
@export var rhythm_notifier: RhythmNotifier
@export var min_transition_duration: float = 1.0
@export var transition_beat_interval: float = 4.0 
@export var bpm: float = 130
@export var latency: float = 0.01
@export var fx: FX
var bps: float :
	get:
		return bpm / 60

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventKey and event.pressed:
		if event.keycode == KEY_P:
			start()
		elif event.keycode == KEY_O:
			start_fx()


func _ready() -> void:
	rhythm_notifier.beats(1.0).connect(func(count):
		print(\"TIME %.4f, ABS_TIME: %.4f, CALC_TIME: %.4f, BEAT %2d  :    %d!\" % [rhythm_notifier.current_position, rhythm_notifier.current_abs_position, fmod(rhythm_notifier.current_abs_position, rhythm_notifier.audio_stream_player.stream.get_length()), rhythm_notifier.current_beat, count])
	)


func start():
	print(\"START TRANSITION\")
	var target_beat = rhythm_notifier.get_interval_end_beat(transition_beat_interval, 0, min_transition_duration)
	var target_position = target_beat * rhythm_notifier.beat_length
	#print(\"    target_beat: \", target_beat)
	print(\"    target_position: \", target_position)
	print(\"    notifier rhythms: \", rhythm_notifier._rhythms)
	#await Utils.wait(target_position - rhythm_notifier.current_abs_position)
	await rhythm_notifier.beats(target_beat - latency, false)
	kick_player.play()
	print(\"TRANSITION END\")
	print(\"    latency: %s cached_latency: %s\" % [latency, rhythm_notifier._cached_output_latency])
	

func start_fx():
	fx.play()
"

[node name="MusicTest" type="Node2D" node_paths=PackedStringArray("kick_player", "rhythm_notifier", "fx")]
script = SubResource("GDScript_p80jl")
kick_player = NodePath("KickPlayer")
rhythm_notifier = NodePath("RhythmNotifier")
min_transition_duration = 2.0
latency = 0.0
fx = NodePath("FX")

[node name="KickPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource("2_yd2ad")

[node name="RhythmNotifier" type="Node" parent="."]
script = ExtResource("3_phn1r")
metadata/_custom_type_script = "uid://dqi2pls0xboqr"

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="RhythmNotifier"]
stream = ExtResource("4_v8abe")
volume_db = -10.0
autoplay = true

[node name="FX" type="Node2D" parent="."]
script = ExtResource("5_c62yb")
metadata/_custom_type_script = "uid://5vpj6ph24507"

[node name="FXBeat" type="Node2D" parent="FX"]
script = ExtResource("6_5n4lr")
beat_delay = 1.0
metadata/_custom_type_script = "uid://dqrlchg6pdnje"

[node name="Kick" type="AudioStreamPlayer" parent="FX/FXBeat"]
stream = ExtResource("2_yd2ad")

[node name="FXBeat2" type="Node2D" parent="FX"]
script = ExtResource("6_5n4lr")
beat_delay = 2.0
metadata/_custom_type_script = "uid://dqrlchg6pdnje"

[node name="Kick2" type="AudioStreamPlayer" parent="FX/FXBeat2"]
stream = ExtResource("7_yda4p")
